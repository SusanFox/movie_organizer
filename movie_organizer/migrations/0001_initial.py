# Generated by Django 5.0.2 on 2024-02-27 20:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('release_year', models.IntegerField()),
                ('genres', models.ManyToManyField(related_name='movies', to='movie_organizer.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('actor', 'Actor'), ('director', 'Director'), ('producer', 'Producer'), ('writer', 'Writer')], max_length=100)),
                ('top_billing', models.BooleanField(default=False)),
                ('cast_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='movie_organizer.cast')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='movie_organizer.movie')),
            ],
            options={
                'unique_together': {('movie', 'cast_member')},
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='cast',
            field=models.ManyToManyField(related_name='movies', through='movie_organizer.Role', to='movie_organizer.cast'),
        ),
    ]
